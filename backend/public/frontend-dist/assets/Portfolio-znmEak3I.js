import{_ as u,o as s,c as y,e as h,a as t,t as m,d as l,w as d,n as p,F as f,g as b,r as k,b as w,h as x}from"./index-DLsstOZw.js";const C={name:"NavPortfolioCard"},S={class:"border-[1px] border-gray-300 px-4 py-2 rounded-sm text-gray-600 text-[14px] sm:text-[15px] md:text-[16px] transition-all duration-300 ease-in-out"};function M(o,e,a,z,r,i){return s(),y("button",S,[h(o.$slots,"default")])}const _=u(C,[["render",M]]),v={name:"PortfolioCard",props:{project:{type:Object,Required:!0}}},P={class:"border-[1.5px] max-w-[360px] sm:max-w-[420px] text-start transition-all duration-300 ease-in-out"},T=["src"],L={class:"px-4 pt-6 pb-2 font-bold text-[19px] sm:text-[24px]"},B={class:"px-4 pb-2 leading-[26px] text-[13px] sm:text-[14px]"},D={class:"px-4 text-[15px] sm:text-[16px]"},G={class:"flex flex-wrap mt-4 mb-6 ml-4 space-y-4"},V=["href"],$=["href"];function N(o,e,a,z,r,i){return s(),y("div",P,[t("img",{src:a.project.imageSrc,alt:"Card Image"},null,8,T),t("h3",L,m(a.project.title),1),t("p",B,m(a.project.technology),1),t("p",D,m(a.project.description),1),t("div",G,[t("a",{href:a.project.live,target:"_blank",class:"px-4 py-2 mt-4 mr-4 text-white rounded-md bg-blue/90"},"Demo",8,V),t("a",{href:a.project.github,target:"_blank",class:"border-[1.5px] border-gray-300 text-gray-500 rounded-md px-4 py-2"},"Github",8,$)])])}const A=u(v,[["render",N]]),I="/frontend-dist/assets/portfolio-fjjVJTs6.png",H="/frontend-dist/assets/mmblog-C9KoPEr2.png",J="/frontend-dist/assets/cars-spot-C-kI35jl.png",R="/frontend-dist/assets/task-managment-system-DCp0YUVI.png",F="/frontend-dist/assets/memory-game-DmMaULVG.png",U="/frontend-dist/assets/rock-scissors-paper-egt8lOSG.png",E="/frontend-dist/assets/todo-list-C7VnjHgI.png",K="/frontend-dist/assets/tree-structure-BzFb22Hq.png",Q={name:"Portfolio",components:{NavPortfolioCard:_,PortfolioCard:A},data(){return{projects:[{imageSrc:I,title:"CMS Portfolio",technology:"Laravel, Vue.js, Tailwind, MySQL",description:"To system zarządzania treścią (CMS) zaprojektowany do tworzenia i administrowania portfolio. API backend umożliwia zarządzanie projektami, dodawanie, edycję i usuwanie danych, takich jak opisy projektów, zdjęcia, tagi czy metadane. Aplikacja integruje frontend w Vue.js z backendem w Laravel, zapewniając płynne zarządzanie treścią portfolio oraz dynamiczne generowanie widoków dla użytkowników. Dzięki wykorzystaniu Tailwind CSS i Vite, strona charakteryzuje się nowoczesnym wyglądem oraz szybkim ładowaniem. Całość jest dostosowana do CI/CD, co ułatwia wdrażanie aktualizacji i rozwój projektu.",live:"https://mariuszmalankiewicz.pl/",github:"https://github.com/MariuszMalankiewicz/cms-portfolio",category:"fullstack"},{imageSrc:H,title:"Aplikacja Blogowa",technology:"Jest oparta na frameworku Laravel, systemie szablonów Blade oraz bazie danych MySQL, pozwala użytkownikom na tworzenie, edytowanie, usuwanie i przeglądanie postów. Umożliwia logowanie, komentowanie, a także przeglądanie archiwum, kategorii i tagów. Całość wykorzystuje nowoczesne funkcjonalności Laravel, takie jak middleware, kontrolery, validacja danych i zarządzanie sesjami. MySQL przechowuje dane o użytkownikach, postach, komentarzach i innych istotnych elementach aplikacji. Projekt ma na celu stworzenie intuicyjnego narzędzia do zarządzania treściami blogowymi, które można łatwo rozwijać o nowe funkcje.",live:"#",github:"https://github.com/MariuszMalankiewicz/MMBlog",category:"fullstack"},{imageSrc:J,title:"Aplikacja do sprzedaży samochodów",technology:"Vue.js, Tailwind",description:"To aplikacja webowa, której celem jest umożliwienie użytkownikom przeglądania, wyszukiwania i zakupu samochodów w sposób intuicyjny i nowoczesny. Frontend projektu oparty jest na Vue.js, co zapewnia dynamiczne i responsywne doświadczenie użytkownika. Do projektowania interfejsu wykorzystano Tailwind CSS, co umożliwia szybkie tworzenie atrakcyjnych i zgodnych z nowoczesnymi standardami layoutów.",live:"https://cars-spott.netlify.app/",github:"https://github.com/MariuszMalankiewicz/cars-spot",category:"frontend"},{imageSrc:R,title:"Restful API do zarzadzania zadaniami",technology:"Laravel",description:'API służy do zarządzania listą zadań w aplikacji typu "to-do". Umożliwia użytkownikom tworzenie, odczytywanie, edytowanie i usuwanie zadań (CRUD). API jest zgodne z zasadami REST i może być wykorzystywane w aplikacjach frontendowych lub mobilnych.',live:"#",github:"https://github.com/MariuszMalankiewicz/task-managment-system",category:"backend"},{imageSrc:F,title:"Gra W Zapamiętywanie",technology:"JavaScript, CSS3, HTML5",description:"To interaktywna aplikacja, która pomaga ćwiczyć pamięć i koncentrację. Gracz musi zapamiętać położenie obrazków lub par symboli, które losowo pojawiają się na planszy, a następnie dopasować je w jak najkrótszym czasie. Gra oferuje różne poziomy trudności, ranking najlepszych wyników oraz możliwość rywalizacji z innymi graczami. To świetna zabawa dla osób w każdym wieku, która jednocześnie rozwija zdolności poznawcze.",live:"https://mariuszmalankiewicz.github.io/Memory-Game/",github:"https://github.com/MariuszMalankiewicz/Memory-Game",category:"frontend"},{imageSrc:U,title:"Gra W Kamień, Papier i Nożyczki",technology:"JavaScript, CSS3, HTML5",description:'Projekt jest prostą grą w klasycznego "Kamień, Papier, Nożyce", napisaną w językach HTML, CSS i JavaScript. Gra pozwala użytkownikowi grać przeciwko komputerowi. Użytkownik wybiera jedną z trzech opcji (kamień, papier, nożyce), a komputer losowo wybiera swój ruch. Następnie program sprawdza wyniki obu wyborów i informuje, kto wygrał dany pojedynek.',live:"https://mariuszmalankiewicz.github.io/Rock-scissors-paper/",github:"https://github.com/MariuszMalankiewicz/Rock-scissors-paper",category:"frontend"},{imageSrc:E,title:"Aplikacja Listy Do Zrobienia",technology:"JavaScript, CSS3, HTML5",description:"To prosta i funkcjonalna aplikacja webowa stworzona w HTML, CSS i JavaScript, której głównym celem jest umożliwienie użytkownikom tworzenia, zarządzania i śledzenia listy zadań do wykonania.",live:"https://mariuszmalankiewicz.github.io/To-Do-List/",github:"https://github.com/MariuszMalankiewicz/To-Do-List",category:"frontend"},{imageSrc:K,title:"Aplikacja Struktury Drzewiastej",technology:"Laravel, Blade",description:"To system umożliwiający tworzenie i zarządzanie hierarchicznymi strukturami danych. Projekt opiera się na frameworku Laravel i wykorzystuje szablon Blade do generowania dynamicznych widoków. Głównym celem jest umożliwienie użytkownikom tworzenia, edytowania i zarządzania strukturami drzewiastymi, takimi jak kategorie, struktura menu, organizacje, lub inne złożone hierarchie danych.",live:"#",github:"https://github.com/MariuszMalankiewicz/Tree-Structure",category:"fullstack"}],selectedCategory:null}},computed:{filteredProjects(){return this.selectedCategory?this.projects.filter(o=>o.category===this.selectedCategory):this.projects}},methods:{filterByCategory(o){return this.selectedCategory=o}}},W={class:"px-4 mt-[80px] font-Montserrat mb-12 pt-32"},q={class:"flex flex-wrap items-center justify-center gap-3 mt-12"},O={class:"flex flex-wrap items-center justify-center gap-12 mt-12"};function Z(o,e,a,z,r,i){const c=k("NavPortfolioCard"),g=k("PortfolioCard");return s(),y("section",W,[e[8]||(e[8]=t("h1",{class:"text-[32px] sm:text-[44px] md:text-[52px] text-center font-bold text-blue"}," Portfolio ",-1)),t("nav",q,[l(c,{class:p([r.selectedCategory===null?"text-white bg-blue":"text-gray-600 bg-white"]),onClick:e[0]||(e[0]=n=>i.filterByCategory(null))},{default:d(()=>e[4]||(e[4]=[w(" Wszystkie ")])),_:1},8,["class"]),l(c,{class:p([r.selectedCategory==="frontend"?"text-white bg-blue":"text-gray-600 bg-white"]),onClick:e[1]||(e[1]=n=>i.filterByCategory("frontend"))},{default:d(()=>e[5]||(e[5]=[w(" Front-End ")])),_:1},8,["class"]),l(c,{class:p([r.selectedCategory==="backend"?"text-white bg-blue":"text-gray-600 bg-white"]),onClick:e[2]||(e[2]=n=>i.filterByCategory("backend"))},{default:d(()=>e[6]||(e[6]=[w(" Back-End ")])),_:1},8,["class"]),l(c,{class:p([r.selectedCategory==="fullstack"?"text-white bg-blue":"text-gray-600 bg-white"]),onClick:e[3]||(e[3]=n=>i.filterByCategory("fullstack"))},{default:d(()=>e[7]||(e[7]=[w(" Full-Stack ")])),_:1},8,["class"])]),t("div",O,[(s(!0),y(f,null,b(i.filteredProjects,(n,j)=>(s(),x(g,{key:j,project:n},null,8,["project"]))),128))])])}const X=u(Q,[["render",Z]]);export{X as default};
